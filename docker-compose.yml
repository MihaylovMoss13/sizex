version: '2'

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: ./Dockerfile
    image: 4c9cd71537cf
    # registry.sl-team.ru/sizex
    restart: always
    command: ["wait-for", "postgres:5432", "--", "run_application"]
    ports:
      - "8000:8000"
    environment:
      - PROD=1
      - PYTHONDONTWRITEBYTECODE=1
      - SIZEX_DATABASE_URL=postgresql://sizex:sizex@postgres:5432/sizex
    links:
      - postgres
      - redis
    volumes:
      - /data/static:/data/static
      - /data/media:/data/media

  celery:
    container_name: celery
    image: 4c9cd71537cf 
    #registry.sl-team.ru/sizex
    command: ["wait-for", "app:8000", "--", "run_celery"]
    environment:
      - PROD=1
      - PYTHONDONTWRITEBYTECODE=1
      - SIZEX_DATABASE_URL=postgresql://sizex:sizex@postgres:5432/sizex
    links:
      - app
      - postgres
      - redis
    volumes:
      - /data/static:/data/static
      - /data/media:/data/media

  postgres:
    container_name: postgres
    image: postgres:10.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=sizex
      - POSTGRES_PASSWORD=sizex
      - POSTGRES_DB=sizex
    volumes:
      - /mnt/docker/sizex-postgres/data:/var/lib/postgresql/data
      - /mnt/docker/sizex-postgres/backup:/var/lib/postgresql/backup
    ports:
      - "55432:5432"
  redis:
    container_name: redis
    image: redis
    restart: always
    volumes:
      - ../data:/data

  web:
    container_name: nginx
    image: nginx
    restart: always
    volumes:
      - ./etc/sizex.conf:/etc/nginx/conf.d/mysite.template
      - /data/static:/data/static
      - /data/media:/data/media
      - /data/tcache:/data/tcache
      - /data/certbot/conf:/etc/letsencrypt
      - /data/certbot/www:/var/www/certbot
    links:
      - app
    ports:
      - 80:80
      - 443:443
    command: /bin/bash -c "cp /etc/nginx/conf.d/mysite.template /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"

  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - /data/static:/data/static
      - /data/media:/data/media
      - /data/certbot/conf:/etc/letsencrypt
      - /data/certbot/www:/var/www/certbot
